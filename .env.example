# Environment Variables Template
# Copy this file to .env and update the values for your environment

# Environment
NODE_ENV=development

# Server Configuration
PORT=3000

# Database
DATABASE_URL="postgresql://postgres:postgres@localhost:5432/auth_service"

# Redis
REDIS_URL="redis://localhost:6379"

# JWT Configuration
# Generate these keys using: node -e "const crypto = require('crypto'); const { publicKey, privateKey } = crypto.generateKeyPairSync('rsa', { modulusLength: 2048, publicKeyEncoding: { type: 'spki', format: 'pem' }, privateKeyEncoding: { type: 'pkcs8', format: 'pem' } }); console.log('JWT_PRIVATE_KEY=\"' + privateKey.replace(/\n/g, '\\n') + '\"'); console.log('JWT_PUBLIC_KEY=\"' + publicKey.replace(/\n/g, '\\n') + '\"');"
JWT_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYOUR_PRIVATE_KEY_HERE\n-----END PRIVATE KEY-----"
JWT_PUBLIC_KEY="-----BEGIN PUBLIC KEY-----\nYOUR_PUBLIC_KEY_HERE\n-----END PUBLIC KEY-----"
JWT_KEY_ID="auth-service-key-1"
JWT_ISSUER="auth-service"

# CORS Configuration
CORS_ORIGINS="http://localhost:3000,http://localhost:3001,http://localhost:5173"

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Email Configuration (for future integration)
EMAIL_FROM="noreply@audiobook.com"
EMAIL_SERVICE_URL=""

# Security Configuration
ARGON2_MEMORY=65536
ARGON2_ITERATIONS=3
ARGON2_PARALLELISM=4

# Logging
LOG_LEVEL="debug"